database:
  image: mysql:5.7.23  
  container_name: production.db 
  restart: always
  environment:
    MYSQL_ROOT_PASSWORD: "root"
    MYSQL_ALLOW_EMPTY_PASSWORD: "yes"

models:
  image: tp33/django
  container_name: models
  ports:
    - "8001:8000"
  links:
    - database:db
  volumes:
    - ./src/models:/app/models
  environment:
    PRODUCTION: "true"
  command: bash -c "chmod +x /app/models/setup.sh && /app/models/setup.sh" 

databaseCMD:
  image: mysql:5.7.23  
  container_name: databaseCMD 
  volumes:
    - ./travis/dbsetup.sql:/tmp/dbsetup.sql
    - ./travis/import.sh:/tmp/import.sh
  links:
    - database:db
  environment:
    MYSQL_ROOT_PASSWORD: "root"
    MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  command: bash -c "chmod +x /tmp/import.sh && /tmp/import.sh"


exp:
  image: tp33/django
  container_name: exp
  links:
    - models:models-api
    - kafka:kafka
    - redis:redis
    - elasticsearch:elasticsearch
  ports:
    - "8002:8000"
  volumes:
    - ./src/experience:/app/experience
  environment:
    PRODUCTION: "false"
  command: bash -c "chmod +x /app/experience/setup.sh && /app/experience/setup.sh"

web:
  build: ./src/frontend/app
  container_name: web
  ports:
    - "8003:80"
  links:
    - exp:exp-api
  volumes:
    - ./src/frontend/app:/app/

kafka:
  image: spotify/kafka
  container_name: kafka
  environment:
    ADVERTISED_HOST: kafka
    ADVERTISED_PORT: 9092
  hostname: kafka


elasticsearch:
  image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.7.0
  container_name: elasticsearch
  environment:
    - cluster.name=docker-cluster
    - bootstrap.memory_lock=true
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  ulimits:
    memlock:
        soft: -1
        hard: -1 
    nofile:
        soft: 65536
        hard: 65536
  ports:
    - 9200:9200

batch-log:
  image: tp33/django
  container_name: batch-log
  links:
    - kafka:kafka
  volumes:
    - ./src/batch-log/app:/app/
  command:
      - bash
      - -c
      - "chmod +x ./setup.sh && ./wait-for-it.sh kafka:9092 -s -t 25 -- ./setup.sh"


batch:
  image: tp33/django
  container_name: batch
  links:
    - kafka:kafka
    - elasticsearch:elasticsearch
  volumes:
    - ./src/batch/app:/app/
  command:
      - bash
      - -c
      - "chmod +x ./setup.sh && ./wait-for-it.sh elasticsearch:9200 -s -t 25 -- ./setup.sh"

spark-master:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.master.Master -h spark-master
  container_name: spark-master
  hostname: spark-master
  links:
      - models:models-api
  environment:
    MASTER: spark://spark-master:7077
    SPARK_CONF_DIR: /conf
  expose:
    - 7001
    - 7002
    - 7003
    - 7004
    - 7005
    - 7006
    - 7077
    - 6066
  ports:
    - 4040:4040
    - 6066:6066
    - 7077:7077
    - 8080:8080
  volumes:
    - ./src/data:/tmp/data

spark-worker:
  image: gettyimages/spark
  command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
  container_name: spark-worker
  hostname: spark-worker
  environment:
    SPARK_CONF_DIR: /conf
    SPARK_WORKER_CORES: 2
    SPARK_WORKER_MEMORY: 512m
    SPARK_WORKER_PORT: 8881
    SPARK_WORKER_WEBUI_PORT: 8081
  links:
    - spark-master
  expose:
    - 7012
    - 7013
    - 7014
    - 7015
    - 7016
    - 8881
  ports:
    - 8081:8081
  volumes:
    - ./src/batch-log/data:/tmp/data

redis:
    image: redis
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
        - 6379:6379
